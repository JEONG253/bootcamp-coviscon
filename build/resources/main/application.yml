# server port set
server:
  port: 8000

# eureka client set
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: api-gateway-service
    # rabbitmq set
#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        # service id, url set
        - id: member-service
          uri: lb://member-service
          # 조건절
          predicates:
            - Path=/member-service/**
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/member-service/(?<segment>.*), /$\{segment}
        # service id, url set
        - id: member-service
          uri: lb://member-service
          # 조건절
          predicates:
            - Path=/member-service/actuator/**
            # Http Method Set
            - Method=GET
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/member-service/(?<segment>.*), /$\{segment}

        # service id, url set
        - id: order-service
          uri: lb://order-service
          # 조건절
          predicates:
            - Path=/order-service/**
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
        - id: order-service
          uri: lb://order-service
          # 조건절
          predicates:
            - Path=/order-service/actuator/**
            # Http Method Set
            - Method=GET
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}

        # service id, url set
        - id: post-service
          uri: lb://post-service
          # 조건절
          predicates:
            - Path=/post-service/**
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/post-service/(?<segment>.*), /$\{segment}
        - id: post-service
          uri: lb://post-service
          # 조건절
          predicates:
            - Path=/post-service/actuator/**
            # Http Method Set
            - Method=GET
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/post-service/(?<segment>.*), /$\{segment}

        # service id, url set
        - id: item-service
          uri: lb://item-service
          # 조건절
          predicates:
            - Path=/item-service/**
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/item-service/(?<segment>.*), /$\{segment}
        - id: item-service
          uri: lb://item-service
          # 조건절
          predicates:
            - Path=/item-service/actuator/**
            # Http Method Set
            - Method=GET
          filters:
            # path 재작성 -> prefix 처럼 붙어 있는 xxx-service 를 제거
            - RewritePath=/item-service/(?<segment>.*), /$\{segment}

# actuator
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus
